{
    "domain": {
        "version": "3.1",
        "intents": [
            "bot_challenge",
            "cluster_headache",
            "cold",
            "cold_confirm",
            "cold_sym",
            "fever_sym",
            "fracture_accepted",
            "fracture_details",
            "fracture_sym",
            "goodbye",
            "greet",
            "headache",
            "med_helped",
            "med_not_helped",
            "migrane",
            "not_well",
            "tension_headache",
            "well"
        ],
        "actions": [
            "action_new_sym",
            "utter_greet",
            "utter_goodbye",
            "utter_iamabot",
            "utter_cold_sym",
            "utter_cold_med",
            "utter_feedback",
            "utter_med_not_helped",
            "utter_med_helped",
            "utter_not_well",
            "utter_well",
            "utter_fever_med",
            "utter_fracture_sym",
            "utter_fracture_details",
            "utter_fracture_confirm",
            "utter_headache_type",
            "utter_migrane",
            "utter_tension_headache",
            "utter_cluster_headache"
        ],
        "responses": {
            "utter_greet": [{
                "text": "Hey! I am your medical assistant. How can i help you"
            }],
            "utter_goodbye": [{
                "text": "Bye"
            }],
            "utter_iamabot": [{
                "text": "I am a your healthcare assistant"
            }],
            "utter_cold_sym": [{
                "text": "Okay, this is a symptom of cold, do you have cold?"
            }],
            "utter_cold_med": [{
                "text": "You should take a spoon full of benadryl after your meal."
            }],
            "utter_feedback": [{
                "text": "let me know if you are feeling better"
            }],
            "utter_med_not_helped": [{
                "text": "Ok, you should consult a doctor."
            }],
            "utter_med_helped": [{
                "text": "Ok, so better to carry on medicine for 2 more days"
            }],
            "utter_not_well": [{
                "text": "Okay, can you tell me what's wrong? what are your symptoms?"
            }],
            "utter_well": [{
                "text": "great to know. how can i assist you then?"
            }],
            "utter_fever_med": [{
                "text": "This is a symptom of fever, you should take a tablet of crocin after you have your meal."
            }],
            "utter_fracture_sym": [{
                "text": "okay, did you get hurt, or it is a sudden aching."
            }],
            "utter_fracture_details": [{
                "text": "ok, is there a swelling or a physical deformity or bleeding at the aching region."
            }],
            "utter_fracture_confirm": [{
                "text": "- okay, it is a common symptom of fracture, you should consult a doctor."
            }],
            "utter_headache_type": [{
                "text": "what kind of headache do you have : 1. Migrane headache - intense throbbing pain on just one side of the head. 2. Cluster headaches - severe and recurrent headaches 3. Tension Headache - Ocassional"
            }],
            "utter_migrane": [{
                "text": "symptom noted. Migraines tend to be recurrent, and each attack may last up to 3 days otherwise consult to doctor"
            }],
            "utter_cluster_headache": [{
                "text": "symptom noted. Attacks tend to occur in daily clusters that can persist for weeks or months. They typically take place at the same time of day, which can often be a couple of hours after falling asleep at night. Better to consult to doctor"
            }],
            "utter_tension_headache": [{
                "text": "symptom noted. The cause of tension headaches is unclear, but stress, anxiety, and depression are common triggers. If it happens regularly then consult to doctor"
            }]
        },
        "session_config": {
            "session_expiration_time": 60,
            "carry_over_slots_to_new_session": true
        }
    },
    "trained_at": "2022-05-09T14:29:30.649152",
    "model_id": "6e3104136f0f4e71b3030678a021195b",
    "rasa_open_source_version": "3.1.0",
    "train_schema": {
        "nodes": {
            "schema_validator": {
                "needs": {
                    "importer": "__importer__"
                },
                "uses": "rasa.graph_components.validators.default_recipe_validator.DefaultV1RecipeValidator",
                "constructor_name": "create",
                "fn": "validate",
                "config": {},
                "eager": false,
                "is_target": false,
                "is_input": true,
                "resource": null
            },
            "finetuning_validator": {
                "needs": {
                    "importer": "schema_validator"
                },
                "uses": "rasa.graph_components.validators.finetuning_validator.FinetuningValidator",
                "constructor_name": "create",
                "fn": "validate",
                "config": {
                    "validate_core": true,
                    "validate_nlu": true
                },
                "eager": false,
                "is_target": false,
                "is_input": true,
                "resource": null
            },
            "nlu_training_data_provider": {
                "needs": {
                    "importer": "finetuning_validator"
                },
                "uses": "rasa.graph_components.providers.nlu_training_data_provider.NLUTrainingDataProvider",
                "constructor_name": "create",
                "fn": "provide",
                "config": {
                    "language": "en",
                    "persist": false
                },
                "eager": false,
                "is_target": false,
                "is_input": true,
                "resource": null
            },
            "run_WhitespaceTokenizer0": {
                "needs": {
                    "training_data": "nlu_training_data_provider"
                },
                "uses": "rasa.nlu.tokenizers.whitespace_tokenizer.WhitespaceTokenizer",
                "constructor_name": "load",
                "fn": "process_training_data",
                "config": {},
                "eager": false,
                "is_target": false,
                "is_input": false,
                "resource": null
            },
            "train_RegexFeaturizer1": {
                "needs": {
                    "training_data": "run_WhitespaceTokenizer0"
                },
                "uses": "rasa.nlu.featurizers.sparse_featurizer.regex_featurizer.RegexFeaturizer",
                "constructor_name": "create",
                "fn": "train",
                "config": {},
                "eager": false,
                "is_target": true,
                "is_input": false,
                "resource": null
            },
            "run_RegexFeaturizer1": {
                "needs": {
                    "training_data": "run_WhitespaceTokenizer0",
                    "resource": "train_RegexFeaturizer1"
                },
                "uses": "rasa.nlu.featurizers.sparse_featurizer.regex_featurizer.RegexFeaturizer",
                "constructor_name": "load",
                "fn": "process_training_data",
                "config": {},
                "eager": false,
                "is_target": false,
                "is_input": false,
                "resource": null
            },
            "train_LexicalSyntacticFeaturizer2": {
                "needs": {
                    "training_data": "run_RegexFeaturizer1"
                },
                "uses": "rasa.nlu.featurizers.sparse_featurizer.lexical_syntactic_featurizer.LexicalSyntacticFeaturizer",
                "constructor_name": "create",
                "fn": "train",
                "config": {},
                "eager": false,
                "is_target": true,
                "is_input": false,
                "resource": null
            },
            "run_LexicalSyntacticFeaturizer2": {
                "needs": {
                    "training_data": "run_RegexFeaturizer1",
                    "resource": "train_LexicalSyntacticFeaturizer2"
                },
                "uses": "rasa.nlu.featurizers.sparse_featurizer.lexical_syntactic_featurizer.LexicalSyntacticFeaturizer",
                "constructor_name": "load",
                "fn": "process_training_data",
                "config": {},
                "eager": false,
                "is_target": false,
                "is_input": false,
                "resource": null
            },
            "train_CountVectorsFeaturizer3": {
                "needs": {
                    "training_data": "run_LexicalSyntacticFeaturizer2"
                },
                "uses": "rasa.nlu.featurizers.sparse_featurizer.count_vectors_featurizer.CountVectorsFeaturizer",
                "constructor_name": "create",
                "fn": "train",
                "config": {},
                "eager": false,
                "is_target": true,
                "is_input": false,
                "resource": null
            },
            "run_CountVectorsFeaturizer3": {
                "needs": {
                    "training_data": "run_LexicalSyntacticFeaturizer2",
                    "resource": "train_CountVectorsFeaturizer3"
                },
                "uses": "rasa.nlu.featurizers.sparse_featurizer.count_vectors_featurizer.CountVectorsFeaturizer",
                "constructor_name": "load",
                "fn": "process_training_data",
                "config": {},
                "eager": false,
                "is_target": false,
                "is_input": false,
                "resource": null
            },
            "train_CountVectorsFeaturizer4": {
                "needs": {
                    "training_data": "run_CountVectorsFeaturizer3"
                },
                "uses": "rasa.nlu.featurizers.sparse_featurizer.count_vectors_featurizer.CountVectorsFeaturizer",
                "constructor_name": "create",
                "fn": "train",
                "config": {
                    "analyzer": "char_wb",
                    "min_ngram": 1,
                    "max_ngram": 4
                },
                "eager": false,
                "is_target": true,
                "is_input": false,
                "resource": null
            },
            "run_CountVectorsFeaturizer4": {
                "needs": {
                    "training_data": "run_CountVectorsFeaturizer3",
                    "resource": "train_CountVectorsFeaturizer4"
                },
                "uses": "rasa.nlu.featurizers.sparse_featurizer.count_vectors_featurizer.CountVectorsFeaturizer",
                "constructor_name": "load",
                "fn": "process_training_data",
                "config": {
                    "analyzer": "char_wb",
                    "min_ngram": 1,
                    "max_ngram": 4
                },
                "eager": false,
                "is_target": false,
                "is_input": false,
                "resource": null
            },
            "train_DIETClassifier5": {
                "needs": {
                    "training_data": "run_CountVectorsFeaturizer4"
                },
                "uses": "rasa.nlu.classifiers.diet_classifier.DIETClassifier",
                "constructor_name": "create",
                "fn": "train",
                "config": {
                    "epochs": 100,
                    "constrain_similarities": true
                },
                "eager": false,
                "is_target": true,
                "is_input": false,
                "resource": null
            },
            "train_EntitySynonymMapper6": {
                "needs": {
                    "training_data": "run_CountVectorsFeaturizer4"
                },
                "uses": "rasa.nlu.extractors.entity_synonyms.EntitySynonymMapper",
                "constructor_name": "create",
                "fn": "train",
                "config": {},
                "eager": false,
                "is_target": true,
                "is_input": false,
                "resource": null
            },
            "train_ResponseSelector7": {
                "needs": {
                    "training_data": "run_CountVectorsFeaturizer4"
                },
                "uses": "rasa.nlu.selectors.response_selector.ResponseSelector",
                "constructor_name": "create",
                "fn": "train",
                "config": {
                    "epochs": 100,
                    "constrain_similarities": true
                },
                "eager": false,
                "is_target": true,
                "is_input": false,
                "resource": null
            },
            "domain_provider": {
                "needs": {
                    "importer": "finetuning_validator"
                },
                "uses": "rasa.graph_components.providers.domain_provider.DomainProvider",
                "constructor_name": "create",
                "fn": "provide_train",
                "config": {},
                "eager": false,
                "is_target": true,
                "is_input": true,
                "resource": null
            },
            "domain_for_core_training_provider": {
                "needs": {
                    "domain": "domain_provider"
                },
                "uses": "rasa.graph_components.providers.domain_for_core_training_provider.DomainForCoreTrainingProvider",
                "constructor_name": "create",
                "fn": "provide",
                "config": {},
                "eager": false,
                "is_target": false,
                "is_input": true,
                "resource": null
            },
            "story_graph_provider": {
                "needs": {
                    "importer": "finetuning_validator"
                },
                "uses": "rasa.graph_components.providers.story_graph_provider.StoryGraphProvider",
                "constructor_name": "create",
                "fn": "provide",
                "config": {
                    "exclusion_percentage": null
                },
                "eager": false,
                "is_target": false,
                "is_input": true,
                "resource": null
            },
            "training_tracker_provider": {
                "needs": {
                    "story_graph": "story_graph_provider",
                    "domain": "domain_for_core_training_provider"
                },
                "uses": "rasa.graph_components.providers.training_tracker_provider.TrainingTrackerProvider",
                "constructor_name": "create",
                "fn": "provide",
                "config": {
                    "debug_plots": false,
                    "augmentation_factor": 50
                },
                "eager": false,
                "is_target": false,
                "is_input": false,
                "resource": null
            },
            "train_MemoizationPolicy0": {
                "needs": {
                    "training_trackers": "training_tracker_provider",
                    "domain": "domain_for_core_training_provider"
                },
                "uses": "rasa.core.policies.memoization.MemoizationPolicy",
                "constructor_name": "create",
                "fn": "train",
                "config": {},
                "eager": false,
                "is_target": true,
                "is_input": false,
                "resource": null
            },
            "train_RulePolicy1": {
                "needs": {
                    "training_trackers": "training_tracker_provider",
                    "domain": "domain_for_core_training_provider"
                },
                "uses": "rasa.core.policies.rule_policy.RulePolicy",
                "constructor_name": "create",
                "fn": "train",
                "config": {},
                "eager": false,
                "is_target": true,
                "is_input": false,
                "resource": null
            },
            "train_UnexpecTEDIntentPolicy2": {
                "needs": {
                    "training_trackers": "training_tracker_provider",
                    "domain": "domain_for_core_training_provider"
                },
                "uses": "rasa.core.policies.unexpected_intent_policy.UnexpecTEDIntentPolicy",
                "constructor_name": "create",
                "fn": "train",
                "config": {
                    "max_history": 5,
                    "epochs": 100
                },
                "eager": false,
                "is_target": true,
                "is_input": false,
                "resource": null
            },
            "train_TEDPolicy3": {
                "needs": {
                    "training_trackers": "training_tracker_provider",
                    "domain": "domain_for_core_training_provider"
                },
                "uses": "rasa.core.policies.ted_policy.TEDPolicy",
                "constructor_name": "create",
                "fn": "train",
                "config": {
                    "max_history": 5,
                    "epochs": 100,
                    "constrain_similarities": true
                },
                "eager": false,
                "is_target": true,
                "is_input": false,
                "resource": null
            }
        }
    },
    "predict_schema": {
        "nodes": {
            "nlu_message_converter": {
                "needs": {
                    "messages": "__message__"
                },
                "uses": "rasa.graph_components.converters.nlu_message_converter.NLUMessageConverter",
                "constructor_name": "load",
                "fn": "convert_user_message",
                "config": {},
                "eager": true,
                "is_target": false,
                "is_input": false,
                "resource": null
            },
            "run_WhitespaceTokenizer0": {
                "needs": {
                    "messages": "nlu_message_converter"
                },
                "uses": "rasa.nlu.tokenizers.whitespace_tokenizer.WhitespaceTokenizer",
                "constructor_name": "load",
                "fn": "process",
                "config": {},
                "eager": true,
                "is_target": false,
                "is_input": false,
                "resource": null
            },
            "run_RegexFeaturizer1": {
                "needs": {
                    "messages": "run_WhitespaceTokenizer0"
                },
                "uses": "rasa.nlu.featurizers.sparse_featurizer.regex_featurizer.RegexFeaturizer",
                "constructor_name": "load",
                "fn": "process",
                "config": {},
                "eager": true,
                "is_target": false,
                "is_input": false,
                "resource": {
                    "name": "train_RegexFeaturizer1",
                    "output_fingerprint": "355cd7f7c24b415d9cf3a19d827c5730"
                }
            },
            "run_LexicalSyntacticFeaturizer2": {
                "needs": {
                    "messages": "run_RegexFeaturizer1"
                },
                "uses": "rasa.nlu.featurizers.sparse_featurizer.lexical_syntactic_featurizer.LexicalSyntacticFeaturizer",
                "constructor_name": "load",
                "fn": "process",
                "config": {},
                "eager": true,
                "is_target": false,
                "is_input": false,
                "resource": {
                    "name": "train_LexicalSyntacticFeaturizer2",
                    "output_fingerprint": "48b64262535048e7aff24e4cd0d126e5"
                }
            },
            "run_CountVectorsFeaturizer3": {
                "needs": {
                    "messages": "run_LexicalSyntacticFeaturizer2"
                },
                "uses": "rasa.nlu.featurizers.sparse_featurizer.count_vectors_featurizer.CountVectorsFeaturizer",
                "constructor_name": "load",
                "fn": "process",
                "config": {},
                "eager": true,
                "is_target": false,
                "is_input": false,
                "resource": {
                    "name": "train_CountVectorsFeaturizer3",
                    "output_fingerprint": "f01b43ccd88c4a00875dd1e0270f1aa8"
                }
            },
            "run_CountVectorsFeaturizer4": {
                "needs": {
                    "messages": "run_CountVectorsFeaturizer3"
                },
                "uses": "rasa.nlu.featurizers.sparse_featurizer.count_vectors_featurizer.CountVectorsFeaturizer",
                "constructor_name": "load",
                "fn": "process",
                "config": {
                    "analyzer": "char_wb",
                    "min_ngram": 1,
                    "max_ngram": 4
                },
                "eager": true,
                "is_target": false,
                "is_input": false,
                "resource": {
                    "name": "train_CountVectorsFeaturizer4",
                    "output_fingerprint": "7c9e2d13b0194caabd6c559f56bfc8e9"
                }
            },
            "run_DIETClassifier5": {
                "needs": {
                    "messages": "run_CountVectorsFeaturizer4"
                },
                "uses": "rasa.nlu.classifiers.diet_classifier.DIETClassifier",
                "constructor_name": "load",
                "fn": "process",
                "config": {
                    "epochs": 100,
                    "constrain_similarities": true
                },
                "eager": true,
                "is_target": false,
                "is_input": false,
                "resource": {
                    "name": "train_DIETClassifier5",
                    "output_fingerprint": "e250e0a3646b4c22a8b52419170cd0be"
                }
            },
            "run_EntitySynonymMapper6": {
                "needs": {
                    "messages": "run_DIETClassifier5"
                },
                "uses": "rasa.nlu.extractors.entity_synonyms.EntitySynonymMapper",
                "constructor_name": "load",
                "fn": "process",
                "config": {},
                "eager": true,
                "is_target": false,
                "is_input": false,
                "resource": {
                    "name": "train_EntitySynonymMapper6",
                    "output_fingerprint": "093e8319893d4165b4b9c6353778764b"
                }
            },
            "run_ResponseSelector7": {
                "needs": {
                    "messages": "run_EntitySynonymMapper6"
                },
                "uses": "rasa.nlu.selectors.response_selector.ResponseSelector",
                "constructor_name": "load",
                "fn": "process",
                "config": {
                    "epochs": 100,
                    "constrain_similarities": true
                },
                "eager": true,
                "is_target": false,
                "is_input": false,
                "resource": {
                    "name": "train_ResponseSelector7",
                    "output_fingerprint": "ace472c85259430a8b4bd3588604dcea"
                }
            },
            "run_FallbackClassifier8": {
                "needs": {
                    "messages": "run_ResponseSelector7"
                },
                "uses": "rasa.nlu.classifiers.fallback_classifier.FallbackClassifier",
                "constructor_name": "load",
                "fn": "process",
                "config": {
                    "threshold": 0.3,
                    "ambiguity_threshold": 0.1
                },
                "eager": true,
                "is_target": false,
                "is_input": false,
                "resource": null
            },
            "run_RegexMessageHandler": {
                "needs": {
                    "messages": "run_FallbackClassifier8",
                    "domain": "domain_provider"
                },
                "uses": "rasa.nlu.classifiers.regex_message_handler.RegexMessageHandler",
                "constructor_name": "load",
                "fn": "process",
                "config": {},
                "eager": true,
                "is_target": false,
                "is_input": false,
                "resource": null
            },
            "domain_provider": {
                "needs": {},
                "uses": "rasa.graph_components.providers.domain_provider.DomainProvider",
                "constructor_name": "load",
                "fn": "provide_inference",
                "config": {},
                "eager": true,
                "is_target": false,
                "is_input": false,
                "resource": {
                    "name": "domain_provider",
                    "output_fingerprint": "55c44ae95a804791849e59f9d39d24d9"
                }
            },
            "run_MemoizationPolicy0": {
                "needs": {
                    "domain": "domain_provider",
                    "tracker": "__tracker__",
                    "rule_only_data": "rule_only_data_provider"
                },
                "uses": "rasa.core.policies.memoization.MemoizationPolicy",
                "constructor_name": "load",
                "fn": "predict_action_probabilities",
                "config": {},
                "eager": true,
                "is_target": false,
                "is_input": false,
                "resource": {
                    "name": "train_MemoizationPolicy0",
                    "output_fingerprint": "65c9b7ff110949698b2b75aa9048cadf"
                }
            },
            "run_RulePolicy1": {
                "needs": {
                    "domain": "domain_provider",
                    "tracker": "__tracker__",
                    "rule_only_data": "rule_only_data_provider"
                },
                "uses": "rasa.core.policies.rule_policy.RulePolicy",
                "constructor_name": "load",
                "fn": "predict_action_probabilities",
                "config": {},
                "eager": true,
                "is_target": false,
                "is_input": false,
                "resource": {
                    "name": "train_RulePolicy1",
                    "output_fingerprint": "7b44e22095bc487f89913cbb0fa53f63"
                }
            },
            "run_UnexpecTEDIntentPolicy2": {
                "needs": {
                    "domain": "domain_provider",
                    "tracker": "__tracker__",
                    "rule_only_data": "rule_only_data_provider"
                },
                "uses": "rasa.core.policies.unexpected_intent_policy.UnexpecTEDIntentPolicy",
                "constructor_name": "load",
                "fn": "predict_action_probabilities",
                "config": {
                    "max_history": 5,
                    "epochs": 100
                },
                "eager": true,
                "is_target": false,
                "is_input": false,
                "resource": {
                    "name": "train_UnexpecTEDIntentPolicy2",
                    "output_fingerprint": "60786de55bee4593b095f65e87552f69"
                }
            },
            "run_TEDPolicy3": {
                "needs": {
                    "domain": "domain_provider",
                    "tracker": "__tracker__",
                    "rule_only_data": "rule_only_data_provider"
                },
                "uses": "rasa.core.policies.ted_policy.TEDPolicy",
                "constructor_name": "load",
                "fn": "predict_action_probabilities",
                "config": {
                    "max_history": 5,
                    "epochs": 100,
                    "constrain_similarities": true
                },
                "eager": true,
                "is_target": false,
                "is_input": false,
                "resource": {
                    "name": "train_TEDPolicy3",
                    "output_fingerprint": "91072c31f35440c9a5d5d927d5808f4d"
                }
            },
            "rule_only_data_provider": {
                "needs": {},
                "uses": "rasa.graph_components.providers.rule_only_provider.RuleOnlyDataProvider",
                "constructor_name": "load",
                "fn": "provide",
                "config": {},
                "eager": true,
                "is_target": false,
                "is_input": false,
                "resource": {
                    "name": "train_RulePolicy1",
                    "output_fingerprint": "70600b9b7e5a4b7dba9c7b7f46a5b486"
                }
            },
            "select_prediction": {
                "needs": {
                    "policy0": "run_MemoizationPolicy0",
                    "policy1": "run_RulePolicy1",
                    "policy2": "run_UnexpecTEDIntentPolicy2",
                    "policy3": "run_TEDPolicy3",
                    "domain": "domain_provider",
                    "tracker": "__tracker__"
                },
                "uses": "rasa.core.policies.ensemble.DefaultPolicyPredictionEnsemble",
                "constructor_name": "load",
                "fn": "combine_predictions_from_kwargs",
                "config": {},
                "eager": true,
                "is_target": false,
                "is_input": false,
                "resource": null
            }
        }
    },
    "training_type": 3,
    "project_fingerprint": null,
    "core_target": "select_prediction",
    "nlu_target": "run_RegexMessageHandler",
    "language": "en"
}